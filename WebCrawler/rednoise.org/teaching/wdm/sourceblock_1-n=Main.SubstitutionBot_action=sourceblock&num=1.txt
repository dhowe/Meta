
import tweeter.*; // be sure to also include your keys


String source = "We|You|He|She chewed on the tire|bone...";


void draw()
{
  String s = createTweet();

  println("-----------"+s.length()+"\n"+s);

  // uncomment to actually send the tweet
  //new Tweeter(ckey, csec, atok, asec).post(s);

  delay(3000); // 3 seconds, just for testing
}


String createTweet()
{
  String tweet = null;

  // make sure the tweet is less than 140 chars

  while (tweet == null || tweet.length () > 140)
    tweet = substitute(source);

  return tweet;
}


/////////////////////////////////////////////////////////////////////

/*
 * Processing version of the substitution engine
 * http://rednoise.org/wdm/substitutor/
 */
String substitute(String phrase) {

    if (phrase.indexOf('|') < 0)
      return phrase;

    phrase = phrase.trim()
        .replaceAll("[\\s]+"," ")
        .replaceAll("[\\t\\r\\n]+", "");

    String[] words = phrase.split(" ");
    for (int i = 0; i < words.length; i++) {

        if (words[i].indexOf('|') > -1) {

            boolean endsWithPunc = false;
            char last = words[i].charAt(words[i].length()-1);

            if ("?;:.!".indexOf(last) > -1) {

                endsWithPunc = true;
                words[i] = words[i].substring(0,words[i].length()-1);
            }

            String[] opts = words[i].split("\\|");
            words[i] = opts[(int)(Math.random()*opts.length)];

            if (words[i] != null && words[i].length()>0)
                if (endsWithPunc) words[i] += last;
        }
    }

    String result = "";
    for (int i = 0; i < words.length; i++)
      result += words[i] + " ";

    return result.trim()
        .replaceAll("\\s\\s+", " ")
        .replaceAll("_+", " ");
}
